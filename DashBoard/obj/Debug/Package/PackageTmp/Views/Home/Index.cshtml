@{
    ViewBag.Title = "Index";
}

<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>
@*<script src="@Url.Content("~/Scripts/jquery-1.9.1.min.js")" type="text/javascript"></script>*@
<script src="@Url.Content("~/Scripts/jquery-ui-1.10.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Hightchart/NuevaVersion/highcharts.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Hightchart/highcharts-more.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Hightchart/exporting.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/numeral.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/Content/jquery.jqGrid/ui.jqgrid-bootstrap-ui.css")" rel="stylesheet" type="text/css" />  
<link href="@Url.Content("~/Content/themes/base/jquery-ui.css")" rel="stylesheet" type="text/css" />    
<link href="@Url.Content("~/Content/jquery.jqGrid/ui.jqgrid.css")" rel="stylesheet" type="text/css" />  


<meta name="viewport" content="width=480, user-scalable=no">
<script type="text/javascript">
    var lista, listanoa, listafollowup;
    $(document).ready(function () {
        window.addEventListener("beforeunload", function (e) {
            $.ajax({
                type: "GET",
                async: false,
                url: '@Url.Action("GoExit", "Login")',
                dataType: 'json',
                contentType: false,
                processData: false,


                success: function (response) {

                },
                error: function (response) {
                    alert(response);
                }

            });
            window.onbeforeunload = null;

        });
      
        $.ajax({
            type: "GET",
            url: '@Url.Action("ObtainListResult", "Forecast")',
            dataType: 'json',
            contentType: false,
            processData: false,


            success: function(response) {            
                graphicforecasted(response.data.Forecast, response.data.Client, response.data.TotalClient, response.data.TotalForecast);
            },
            error: function(response) {
                alert(response);
            }

        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("ObtainListResult", "Invoiced")',
            dataType: 'json',
            async: false,
            success: function(response) {
                lista = response.listadouble;
                listanoa = response.listanoa;
                listafollowup = response.listafollowup;
                graphic(lista, response.total);
                graphic2(listanoa);
                graphic3(listafollowup);
            },
            error: function(response) {
                alert(response);
            }

        });


        $.ajax({
            type: "GET",
            url: '@Url.Action("ObtainListResultGoogle", "ContractRenewals")',
            dataType: 'json',
            contentType: false,
            processData: false,
            async: false,
            success: function(response) {
                graphiccontractsrewals(response.data);
                graphicpendingrenewals(response.pending);
            },
            error: function(response) {
                alert("error");
            }

        });


    });


    $(window).resize(function() {
        $(Highcharts.charts).each(function(i, chart) {
            var height = chart.renderTo.clientHeight;
            var width = chart.renderTo.clientWidth;
            chart.setSize(width, height);
        });
    });

    function graphic(lista, total) {
        $('#total').append('Total Invoiced to date ' + total);
        $('#invoiced').highcharts({
            chart: {
                renderTo: 'containerInvoiced',
                type: 'line'
            },
            tooltip: {
                formatter: function() {
                    return "$" + this.y.toFixed(3).toString().replace('.', ',') + ' ' + this.x;
                }
            },
            credits: {
                enabled: false
            },
            lang: {
                thousandsSep: ',',
                decimalPoint: ','
            },
            title: {
                text: 'Invoiced'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']
            },
            yAxis: {
                title: {
                    text: ''
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true

                    },
                    enableMouseTracking: true
                }
            },
            series: [
                {
                    name: '',
                    data: lista
                }
            ]
        });
    };

    function graphic2(lista) {
        $('#containernoa').highcharts({
            chart: {
                renderTo: 'containerWaiting',
                type: 'line'
            },
            credits: {
                enabled: false
            },
            lang: {
                thousandsSep: ','
            },
            yAxis: {
                // Primary yAxis
                labels: {
                    formatter: function() {
                        return numeral(this.value).format('0,0');
                    }
                }
            },
            tooltip: {
                formatter: function() {
                    return "$" + numeral(this.y).format('0,0') + ' ' + this.x;
                }
            },
            title: {
                text: 'Waiting to be invoiced'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true

                    },
                    enableMouseTracking: true
                }
            },
            series: [
                {
                    name: '',
                    data: lista
                }
            ]
        });
    };

    function graphic3(lista) {
        $('#followup').highcharts({
            chart: {
                renderTo: 'containerOfClaims',
                type: 'column'
            },
            credits: {
                enabled: false
            },
            title: {
                text: '#Of Claims (Pending Noa)'
            },
            xAxis: {
                categories: [
                    'Jul',
                    'Aug',
                    'Sep',
                    'Oct',
                    'Nov',
                    'Dec',
                    'Jan',
                    'Feb',
                    'Mar',
                    'Apr',
                    'May',
                    'Jun'
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.y}</span><table>',
                pointFormat: '',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [
                {
                    name: ' ',
                    data: lista,
                    dataLabels: {
                        enabled: true,
                        color: 'black',
                        align: 'right',
                        format: '{point.y:.0f}', // one decimal
                        style: {
                            fontSize: '13px',
                            fontFamily: 'Verdana, sans-serif'
                        }
                    }

                }
            ]
        });
    }

    function graphiccontractsrewals(lista) {
        $('#contractsrewals').highcharts({
            chart: {
                renderTo: 'containerContractsRenewals',
                type: 'column'
            },
            credits: {
                enabled: false
            },
            title: {
                text: 'Contracts Renewed'
            },
            xAxis: {
                categories: [
                    'Jul',
                    'Aug',
                    'Sep',
                    'Oct',
                    'Nov',
                    'Dec',
                    'Jan',
                    'Feb',
                    'Mar',
                    'Apr',
                    'May',
                    'Jun'
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.y}</span><table>',
                pointFormat: '',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [
                {
                    name: ' ',
                    data: lista,
                    dataLabels: {
                        enabled: true,
                        color: 'black',
                        align: 'right',
                        format: '{point.y:.0f}', // one decimal
                        style: {
                            fontSize: '13px',
                            fontFamily: 'Verdana, sans-serif'
                        }
                    }

                }
            ]
        });
    }

    function graphicpendingrenewals(lista) {
        $('#pendingrenewals').highcharts({
            chart: {
                renderTo: 'containerPendingRenewals',
                type: 'column'
            },
            credits: {
                enabled: false
            },
            title: {
                text: 'Pending Renewals'
            },
            xAxis: {
                categories: [
                    'Jul',
                    'Aug',
                    'Sep',
                    'Oct',
                    'Nov',
                    'Dec',
                    'Jan',
                    'Feb',
                    'Mar',
                    'Apr',
                    'May',
                    'Jun'
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.y}</span><table>',
                pointFormat: '',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [
                {
                    name: ' ',
                    data: lista,
                    dataLabels: {
                        enabled: true,
                        color: 'black',
                        align: 'right',
                        format: '{point.y:.0f}', // one decimal
                        style: {
                            fontSize: '13px',
                            fontFamily: 'Verdana, sans-serif'
                        }
                    }

                }
            ]
        });
    }

    function graphicforecasted(forecast, client, totalclient, totalforecast) {
        var total = parseInt(totalforecast);
        var tabla = "<table class='table table-striped table-bordered'><thead><tr><th></th><th>Forecasted</th><th>Filed</th></tr></thead><tbody>" +
            "<tr><td>Claim Value ($)</td><td>" + numeral(totalforecast).format('$0,0') + "</td><td>" + numeral(forecast).format('$0,0') + "</td></tr>" +
            "<tr><td>#of claims</td><td>" + totalclient + "</td><td>" + client + "</td></tr>" +
            "</tbody></table>";
        $('#tabl').append(tabla);

        Highcharts.chart('graphic', {

            chart: {
                type: 'gauge',
                plotBackgroundColor: null,
                plotBackgroundImage: null,
                plotBorderWidth: 0,
                plotShadow: false
            },
            credits: {
                enabled: false
            },
            title: {
                text: '# of Submitted Claims'
            },

            pane: {
                startAngle: -150,
                endAngle: 150,
                background: [{
                    backgroundColor: {
                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                        stops: [
                    [0, '#FFF'],
                    [1, '#333']
                ]
                    },
                    borderWidth: 0,
                    outerRadius: '109%'
                }, {
                    backgroundColor: {
                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                        stops: [
                    [0, '#333'],
                    [1, '#FFF']
                ]
                    },
                    borderWidth: 1,
                    outerRadius: '107%'
                }, {
                    // default background
                }, {
                    backgroundColor: '#DDD',
                    borderWidth: 0,
                    outerRadius: '105%',
                    innerRadius: '103%'
                }]
            },

            // the value axis
            yAxis: {
                min: 0,
                max: 40,

                minorTickInterval: 'auto',
                minorTickWidth: 1,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',

                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 10,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: '# of Submitted Claims'
                },
                plotBands: [{
                    from: 0,
                    to: 120,
                    color: '#55BF3B' // green
                }, {
                    from: 120,
                    to: 160,
                    color: '#DDDF0D' // yellow
                }, {
                    from: 160,
                    to: 200,
                    color: '#DF5353' // red
                }]
            },

            series: [{
                name: '# of Submitted Claims',
                data: [client],
                tooltip: {
                    valueSuffix: ' '
                }
            }]

        },
        // Add some life
function (chart) {

});


        Highcharts.chart('forecasted', {

            chart: {
                type: 'gauge',
                plotBackgroundColor: null,
                plotBackgroundImage: null,
                plotBorderWidth: 0,
                plotShadow: false
            },
            credits: {
                enabled: false
            },
            title: {
                text: 'Claim Value ($)'
            },

            pane: {
                startAngle: -150,
                endAngle: 150,
                background: [{
                    backgroundColor: {
                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                        stops: [
                    [0, '#FFF'],
                    [1, '#333']
                ]
                    },
                    borderWidth: 0,
                    outerRadius: '109%'
                }, {
                    backgroundColor: {
                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                        stops: [
                    [0, '#333'],
                    [1, '#FFF']
                ]
                    },
                    borderWidth: 1,
                    outerRadius: '107%'
                }, {
                    // default background
                }, {
                    backgroundColor: '#DDD',
                    borderWidth: 0,
                    outerRadius: '105%',
                    innerRadius: '103%'
                }]
            },

            // the value axis
            yAxis: {
                min: 0,
                max: 8805773,

                minorTickInterval: 'auto',
                minorTickWidth: 1,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',

                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 10,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: 'Millons'
                },
                plotBands: [{
                    from: 0,
                    to: 3000000,
                    color: '#55BF3B' // green
                }, {
                    from: 3000000,
                    to: 6000000,
                    color: '#DDDF0D' // yellow
                }, {
                    from: 6000000,
                    to: 8805773,
                    color: '#DF5353' // red
                }]
            },

            series: [{
                name: 'Claim Value ($)',
                data: [3952707],
                tooltip: {
                    valueSuffix: ' Millons'
                }
            }]

        },
        // Add some life
function (chart) {
    if (!chart.renderer.forExport) {

    }


});

    }

    Highcharts.setOptions({
        lang: {
            thousandsSep: ',',
            decimalPoint: ','
        }
    });

    $(function () {
        // Initialize numeric spinner input boxes
        //$(".numeric-spinner").spinedit();

        // Initalize modal dialog
        // attach modal-container bootstrap attributes to links with .modal-link class.
        // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
        $('body').on('click', '.modal-link', function (e) {
            e.preventDefault();
            $(this).attr('data-target', '#modal-container');
            $(this).attr('data-toggle', 'modal');
        });

        // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
        $('body').on('click', '.modal-close-btn', function () {
            $('#modal-container').modal('hide');
        });

        //clear modal cache, so that new content can be loaded
        $('#modal-container').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
        });

        $('#CancelModal').on('click', function () {
            return false;
        });
    });

    function abrir() {
        $("#modal").dialog({
             autoOpen: true,
             width: 1000,
             resizable: false,
             title: '',
            // modal: true,
             open: function () {
                 $(this).load('@Url.Action("Grid", "ContractRenewals")');
            }
        });


    }
</script>


<div class="row" style="background-color: #F2F2F2; height: 20px;">
</div>
<div style="margin: 20px; padding: 10px 40px;">
    <div id="tabl" style="height: 197px; margin: auto; width: 354px;"></div>
    <div class="row">

        <div id="graphic" class="col-sm-6 col-lg-6 col-xs-6"></div>
        <div id="forecasted" class="col-sm-6 col-lg-6 col-xs-6"></div>
    </div>
</div>
<div class="row">
    <img src="@Url.Content("~/Content/Image/separador.png")" alt=""/>
</div>
<div style="margin: 20px; padding: 10px 40px;">
    <div id="total"></div>
    <div class="row">
        <div class="col-sm-6 col-lg-6 col-xs-6" id="invoiced" style="margin-top: 13px;"></div>
        <div class="col-sm-6 col-lg-6 col-xs-6" id="containernoa" style="margin-top: 13px;"></div>
    </div>
    <div class="row"></div>
    <div class="row" style="background-color: #F2F2F2; height: 20px; margin-top: 11px;">
        <div class="col-sm-12 col-lg-12 col-xs-12" id="followup"></div>
    </div>
</div>
<div class="row">
    <img src="@Url.Content("~/Content/Image/separador.png")" alt=""/>
</div>
<div style="margin: 20px; padding: 10px 40px;">
    <div class="row">
        <div class="col-sm-6 col-lg-6 col-xs-6" onclick="abrir();"  id="contractsrewals"></div>
        <div class="col-sm-6 col-lg-6 col-xs-6" id="pendingrenewals"></div>
    </div>
</div>
    
    <div id="modal"></div>